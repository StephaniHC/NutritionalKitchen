// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NutritionalKitchen.Infrastructure.DomainModel;

#nullable disable

namespace NutritionalKitchen.Infrastructure.Migrations
{
    [DbContext(typeof(DomainDbContext))]
    partial class DomainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NutritionalKitchen.Domain.KitchenTask.KitchenTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<string>("Kitchener")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Kitchener");

                    b.Property<DateTime>("PreparationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("PreparationDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("KitchenTask", (string)null);
                });

            modelBuilder.Entity("NutritionalKitchen.Domain.Label.Label", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Address");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uuid")
                        .HasColumnName("ContractId");

                    b.Property<DateTime>("DeliberyDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeliberyDate");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Detail");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ExpirationDate");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid")
                        .HasColumnName("PatientId");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ProductionDate");

                    b.HasKey("Id");

                    b.ToTable("Label", (string)null);
                });

            modelBuilder.Entity("NutritionalKitchen.Domain.Package.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("LabelId")
                        .HasColumnType("uuid")
                        .HasColumnName("LabelId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Package", (string)null);
                });

            modelBuilder.Entity("NutritionalKitchen.Domain.PreparedFood.PreparedFood", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("IdKitchenTask")
                        .HasColumnType("uuid")
                        .HasColumnName("IdKitchenTask");

                    b.HasKey("Id");

                    b.ToTable("PreparedFood", (string)null);
                });

            modelBuilder.Entity("NutritionalKitchen.Domain.RecipePreparation.RecipePreparation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Detail");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid")
                        .HasColumnName("PatientId");

                    b.Property<DateTime>("PreparationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("PreparationDate");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("RecipeName");

                    b.HasKey("Id");

                    b.ToTable("RecipePreparation", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
